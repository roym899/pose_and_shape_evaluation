{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting started CPAS Toolbox is a package for evaluation of categorical pose and shape estimation methods. It contains metrics, and wrappers for datasets and methods. Installation Run pip install cpas_toolbox to install the latest release of the toolbox. There is no need to download any additional weights or datasets. Upon first usage the evaluation script will ask to download the weights if they are not available at the expected path. Evaluation of baseline methods To reproduce the REAL275 benchmark run: python -m cpas_toolbox.evaluate --config real275.yaml --out_folder ./results/ To reproduce the REDWOOD75 benchmark run: python -m cpas_toolbox.evaluate --config redwood75.yaml --out_folder ./results/ We can overwrite settings of the configuration via the command-line. For example, python -m cpas_toolbox.evaluate --config redwood75.yaml --out_folder ./results/ --visualize_gt True --visualize_prediction True enables interactive visualization of ground truth and predictions. Alternatively, you could specify --store_visualization True to save the visualization of every prediction in the results directory. Citation If you find this library useful in your research, consider citing our publication : @article{bruns2022evaluation, title={On the Evaluation of {RGB-D}-based Categorical Pose and Shape Estimation}, author={Bruns, Leonard and Jensfelt, Patric}, journal={arXiv preprint arXiv:2202.10346}, year={2022} }","title":"Getting started"},{"location":"#getting-started","text":"CPAS Toolbox is a package for evaluation of categorical pose and shape estimation methods. It contains metrics, and wrappers for datasets and methods.","title":"Getting started"},{"location":"#installation","text":"Run pip install cpas_toolbox to install the latest release of the toolbox. There is no need to download any additional weights or datasets. Upon first usage the evaluation script will ask to download the weights if they are not available at the expected path.","title":"Installation"},{"location":"#evaluation-of-baseline-methods","text":"To reproduce the REAL275 benchmark run: python -m cpas_toolbox.evaluate --config real275.yaml --out_folder ./results/ To reproduce the REDWOOD75 benchmark run: python -m cpas_toolbox.evaluate --config redwood75.yaml --out_folder ./results/ We can overwrite settings of the configuration via the command-line. For example, python -m cpas_toolbox.evaluate --config redwood75.yaml --out_folder ./results/ --visualize_gt True --visualize_prediction True enables interactive visualization of ground truth and predictions. Alternatively, you could specify --store_visualization True to save the visualization of every prediction in the results directory.","title":"Evaluation of baseline methods"},{"location":"#citation","text":"If you find this library useful in your research, consider citing our publication : @article{bruns2022evaluation, title={On the Evaluation of {RGB-D}-based Categorical Pose and Shape Estimation}, author={Bruns, Leonard and Jensfelt, Patric}, journal={arXiv preprint arXiv:2202.10346}, year={2022} }","title":"Citation"},{"location":"data_preparation/","text":"Data preparation On first usage of a dataset the script will download and preprocess the datasets automatically. This is the recommended way to use the package as it ensures an unmodified dataset. If you already downloaded a dataset and want to use symlinks instead of storing them again to save storage space, you can follow the manual instructions below. The default directories can be found in the configuration file for the respective dataset ( REAL275 , REDWOOD75 ). REAL275 For download links check the NOCS repository . The expected folder structure for REAL275 evaluation is as follows: {root_dir}/real_test/... {root_dir}/gts/... {root_dir}/obj_models/... An additional directory {root_dir}/csap_toolbox/ will be created to store preprocessed files. By default {root_dir} will be data/nocs/ (i.e., relative to the current working directory, when executing the evaluation script), but it can be modified. REDWOOD75 To download the raw data check the redwood-data website . You can download the REDWOOD75 annotations here . Only the Redwood sequences ids contained in this file are required for evaluation. The expected folder structure for REDWOOD75 evaluation is as follows: {root_dir}/bottle/rgbd/00049/depth/*.png {root_dir}/bottle/rgbd/... {root_dir}/bowl/... {root_dir}/mug/... {ann_dir}/obj_models/... By default {root_dir} will be data/redwood/ (i.e., relative to the current working directory, when executing the evaluation script) {ann_dir} will be data/redwood75/ , but those can be modified.","title":"Data preparation"},{"location":"data_preparation/#data-preparation","text":"On first usage of a dataset the script will download and preprocess the datasets automatically. This is the recommended way to use the package as it ensures an unmodified dataset. If you already downloaded a dataset and want to use symlinks instead of storing them again to save storage space, you can follow the manual instructions below. The default directories can be found in the configuration file for the respective dataset ( REAL275 , REDWOOD75 ).","title":"Data preparation"},{"location":"data_preparation/#real275","text":"For download links check the NOCS repository . The expected folder structure for REAL275 evaluation is as follows: {root_dir}/real_test/... {root_dir}/gts/... {root_dir}/obj_models/... An additional directory {root_dir}/csap_toolbox/ will be created to store preprocessed files. By default {root_dir} will be data/nocs/ (i.e., relative to the current working directory, when executing the evaluation script), but it can be modified.","title":"REAL275"},{"location":"data_preparation/#redwood75","text":"To download the raw data check the redwood-data website . You can download the REDWOOD75 annotations here . Only the Redwood sequences ids contained in this file are required for evaluation. The expected folder structure for REDWOOD75 evaluation is as follows: {root_dir}/bottle/rgbd/00049/depth/*.png {root_dir}/bottle/rgbd/... {root_dir}/bowl/... {root_dir}/mug/... {ann_dir}/obj_models/... By default {root_dir} will be data/redwood/ (i.e., relative to the current working directory, when executing the evaluation script) {ann_dir} will be data/redwood75/ , but those can be modified.","title":"REDWOOD75"},{"location":"api_reference/camera_utils/","text":"cpas_toolbox.camera_utils This module provides a pinhole camera class.","title":"camera_utils.py"},{"location":"api_reference/camera_utils/#cpas_toolbox.camera_utils","text":"This module provides a pinhole camera class.","title":"camera_utils"},{"location":"api_reference/evaluate/","text":"cpas_toolbox.evaluate Script to run pose and shape evaluation for different datasets and methods.","title":"evaluate.py"},{"location":"api_reference/evaluate/#cpas_toolbox.evaluate","text":"Script to run pose and shape evaluation for different datasets and methods.","title":"evaluate"},{"location":"api_reference/method_wrappers/","text":"cpas_toolbox.method_wrappers Wrapper for pose and shape estimation methods.","title":"method_wrappers.py"},{"location":"api_reference/method_wrappers/#cpas_toolbox.method_wrappers","text":"Wrapper for pose and shape estimation methods.","title":"method_wrappers"},{"location":"api_reference/metrics/","text":"cpas_toolbox.metrics Metrics for shape evaluation.","title":"metrics.py"},{"location":"api_reference/metrics/#cpas_toolbox.metrics","text":"Metrics for shape evaluation.","title":"metrics"},{"location":"api_reference/pointset_utils/","text":"cpas_toolbox.pointset_utils Utility functions to handle pointsets.","title":"pointset_utils.py"},{"location":"api_reference/pointset_utils/#cpas_toolbox.pointset_utils","text":"Utility functions to handle pointsets.","title":"pointset_utils"},{"location":"api_reference/quaternion_utils/","text":"cpas_toolbox.quaternion_utils Functions to handle transformations with quaternions. Inspired by PyTorch3D, but using scalar-last convention and not enforcing scalar > 0. https://github.com/facebookresearch/pytorch3d","title":"quaternion_utils.py"},{"location":"api_reference/quaternion_utils/#cpas_toolbox.quaternion_utils","text":"Functions to handle transformations with quaternions. Inspired by PyTorch3D, but using scalar-last convention and not enforcing scalar > 0. https://github.com/facebookresearch/pytorch3d","title":"quaternion_utils"},{"location":"api_reference/utils/","text":"cpas_toolbox.utils This module provides miscellaneous utility functions.","title":"utils.py"},{"location":"api_reference/utils/#cpas_toolbox.utils","text":"This module provides miscellaneous utility functions.","title":"utils"},{"location":"api_reference/datasets/nocs_dataset/","text":"cpas_toolbox.datasets.nocs_dataset Module providing dataset class for NOCS datasets (CAMERA / REAL).","title":"nocs_dataset.py"},{"location":"api_reference/datasets/nocs_dataset/#cpas_toolbox.datasets.nocs_dataset","text":"Module providing dataset class for NOCS datasets (CAMERA / REAL).","title":"nocs_dataset"},{"location":"api_reference/datasets/nocs_utils/","text":"cpas_toolbox.datasets.nocs_utils Module for utility function related to NOCS dataset. This module contains functions to find similarity transform from NOCS maps and evaluation function for typical metrics on the NOCS datasets. Aligning code by Srinath Sridhar https://raw.githubusercontent.com/hughw19/NOCS_CVPR2019/master/aligning.py Evaluation code by ... TODO","title":"nocs_utils.py"},{"location":"api_reference/datasets/nocs_utils/#cpas_toolbox.datasets.nocs_utils","text":"Module for utility function related to NOCS dataset. This module contains functions to find similarity transform from NOCS maps and evaluation function for typical metrics on the NOCS datasets. Aligning code by Srinath Sridhar https://raw.githubusercontent.com/hughw19/NOCS_CVPR2019/master/aligning.py Evaluation code by ... TODO","title":"nocs_utils"},{"location":"api_reference/datasets/redwood_dataset/","text":"cpas_toolbox.datasets.redwood_dataset Module providing dataset class for annotated Redwood dataset.","title":"redwood_dataset.py"},{"location":"api_reference/datasets/redwood_dataset/#cpas_toolbox.datasets.redwood_dataset","text":"Module providing dataset class for annotated Redwood dataset.","title":"redwood_dataset"}]}